{
    "version": "https://jsonfeed.org/version/1",
    "title": "DuoLa口袋不放糖 • All posts by \"dagre\" tag",
    "description": "人来人往，盼青龙上岸，只怪你我相见恨晚",
    "home_page_url": "https://github.com/Catlina-2B/catlina-2B.github.io",
    "items": [
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/viteDagre/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/viteDagre/",
            "title": "vite 中使用 dagre-d3 报错",
            "date_published": "2022-09-09T09:13:00.000Z",
            "content_html": "<h1 id=\"报错信息\"><a class=\"markdownIt-Anchor\" href=\"#报错信息\">#</a> 报错信息</h1>\n<p>在本地 dev 环境中一切正常，但 build 完成后到线上，就发生了报错：</p>\n<blockquote>\n<p>TypeError: Cannot read properties of undefined (reading ‘layout’)</p>\n</blockquote>\n<p>如下图：</p>\n<img data-src=\"/2022/09/09/viteDagre/error-1.jpg\" class=\"\">\n<h1 id=\"原使用方法\"><a class=\"markdownIt-Anchor\" href=\"#原使用方法\">#</a> 原使用方法</h1>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dagreD3 <span class=\"token keyword\">from</span> <span class=\"token string\">'dagre-d3'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dagreD3<span class=\"token punctuation\">.</span>graphlib<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setGraph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">multigraph</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">compound</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// rank direction</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>g<span class=\"token punctuation\">.</span><span class=\"token function\">graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rankdir <span class=\"token operator\">=</span> <span class=\"token string\">\"RL\"</span></pre></td></tr></table></figure><h1 id=\"分析原因\"><a class=\"markdownIt-Anchor\" href=\"#分析原因\">#</a> 分析原因</h1>\n<blockquote>\n<p>是的，根据文档写出的代码出了问题，那么电脑的问题占了百分之 70，因此我砸了这台电脑换了台新的 mac，不得不说是真香（跑偏了～）</p>\n</blockquote>\n<p>上网上搜了下，并没有得到解决方法，只能自己研究下，一步步查看执行过程：</p>\n<h2 id=\"查找报错位置\"><a class=\"markdownIt-Anchor\" href=\"#查找报错位置\">#</a> 查找报错位置：</h2>\n<p>图中显示报错是变量 layout 找不到，因此一定是内部执行时遇到了问题，先找到 dagreD3 源码：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">graphlib</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/graphlib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">dagre</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/dagre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">intersect</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/intersect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">render</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/render\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">util</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/version\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接着继续找到 graphlib：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* global window */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> graphlib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> require <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    graphlib <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"graphlib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// continue regardless of error</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>graphlib<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  graphlib <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>graphlib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> graphlib<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在这里发现当识别不到 <code>require</code>  时，便会去 <code>window</code>  下的 <code>graphlib</code>  寻找，那么原因就找到了，vite 默认是不支持 require 的，所以 graphlib 找到了 window 下的 graphlib，<br>\n可以想象后续执行一定是报错的，我们实验一下，在下方加入打印：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>graphlib<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It's been here.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  graphlib <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>graphlib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>graphlib<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> graphlib<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>执行一下：</p>\n<img data-src=\"/2022/09/09/viteDagre/error-2.jpg\" class=\"\">\n<br/>\n果然，在这个地方跪了，所以问题也找到了。\n<h2 id=\"问题的解决\"><a class=\"markdownIt-Anchor\" href=\"#问题的解决\">#</a> 问题的解决</h2>\n<p>既然是 <code>graphlib</code>  未找到，那么我们有两种解决方案</p>\n<ul>\n<li>第一：将 require 在 vite 打包前注入到 vite 中，这也是为什么 dev 的时候好好的，但是 build 之后就会报错，因为 vite 本地 server 是 node 环境，所以需要配置 vite 支持 require。</li>\n<li>第二：将 dagre-d3.min.js 放到 index.html 模板头部引入，这样 dagre-d3 就会被放入 window 下。</li>\n</ul>\n<p>Cat 这里使用的是第二种方式，比较暴力一些。</p>\n<h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h1>\n<blockquote>\n<p>报错信息很重要！<br>\n报错信息很重要！<br>\n报错信息很重要！</p>\n</blockquote>\n<p>重要的事情说三遍，开发中还是要善于分析报错信息，不然就会无脑被卡很久，说多了都是泪～</p>\n",
            "tags": [
                "vite",
                "dagre"
            ]
        }
    ]
}