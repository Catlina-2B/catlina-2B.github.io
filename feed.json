{
    "version": "https://jsonfeed.org/version/1",
    "title": "DuoLa口袋不放糖",
    "description": "人来人往，盼青龙上岸，只怪你我相见恨晚",
    "home_page_url": "https://github.com/Catlina-2B/catlina-2B.github.io",
    "items": [
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/about/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/about/",
            "title": "关于Catlina",
            "date_published": "2024-03-27T14:48:51.176Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/vueseo/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/vueseo/",
            "title": "prerender-spa-plugin Vue预渲染配合meta-info优化seo",
            "date_published": "2024-03-27T10:29:33.527Z",
            "content_html": "<h2 id=\"解决过程\"><a class=\"markdownIt-Anchor\" href=\"#解决过程\">#</a> 解决过程</h2>\n<p>先安装 prerender 和 puppeteer 插件  这个国外大神写的  github 地址就不附上了 (百度有)</p>\n<p>cnpm install prerender-spa-plugin</p>\n<p>npm install --save puppeteer --ignore-scripts</p>\n<p>这里注意  一定要用 cnpm 代理下载   不然下载不到 chromium</p>\n<p>安装好之后注意在 package.json 上查看版本号  不同版本号有不同的写法  这个一定要注意（可以上 github 上查看不同版本的写法）</p>\n<h4 id=\"第一步-引入插件及方法不同版本不同用法-此处版本为3x2x请忽略\"><a class=\"markdownIt-Anchor\" href=\"#第一步-引入插件及方法不同版本不同用法-此处版本为3x2x请忽略\">#</a> 第一步 引入插件及方法（不同版本不同用法  此处版本为 3.x，2.x 请忽略）</h4>\n<p><img data-src=\"https://img2018.cnblogs.com/blog/1416731/201904/1416731-20190425155946382-1423490041.png\" alt=\"avatar\"></p>\n<h4 id=\"第二步-配置prerenderspaplugin\"><a class=\"markdownIt-Anchor\" href=\"#第二步-配置prerenderspaplugin\">#</a> 第二步 配置 PrerenderSPAPlugin</h4>\n<p><img data-src=\"https://img2018.cnblogs.com/blog/1416731/201904/1416731-20190425160146809-1146864215.png\" alt=\"avatar\"></p>\n<h4 id=\"第三步-mainjs中将render-event方法放入\"><a class=\"markdownIt-Anchor\" href=\"#第三步-mainjs中将render-event方法放入\">#</a> 第三步 main.js 中将 render-event 方法放入</h4>\n<p><img data-src=\"https://img2018.cnblogs.com/blog/1416731/201904/1416731-20190425160305484-411664263.png\" alt=\"avatar\"></p>\n<p><font color=\"#FF0000\" >这里记住一定要将方法放入 mouted 里面</font></p>\n<h4 id=\"第四步-将-mode-设置为-history-模式不用-history-模式不行这里一定要改为-history-模式\"><a class=\"markdownIt-Anchor\" href=\"#第四步-将-mode-设置为-history-模式不用-history-模式不行这里一定要改为-history-模式\">#</a> 第四步 将 mode 设置为 history 模式（不用 history 模式不行！！！这里一定要改为 history 模式）</h4>\n<h4 id=\"第五步-将-configindexjs-下的-build-中的-assetspublicpath-换成\"><a class=\"markdownIt-Anchor\" href=\"#第五步-将-configindexjs-下的-build-中的-assetspublicpath-换成\">#</a> 第五步 将 config/index.js 下的 build 中的 assetsPublicPath 换成’…/’</h4>\n<p><img data-src=\"https://img2018.cnblogs.com/blog/1416731/201904/1416731-20190425161649573-385520517.png\" alt=\"avatar\"></p>\n<p>最后直接打包 npm run build 就可以了</p>\n<p>过程中会出现 minichrome 测试浏览器，生成 dist 文件内包含预渲染文件目录</p>\n",
            "tags": [
                "vue",
                "seo"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/websocket/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/websocket/",
            "title": "uni-app 真机测试 socketTask = uni.connectSocket 可以成功，但是socketTask.onOpen 监听不到连接成功",
            "date_published": "2024-03-27T10:29:33.527Z",
            "content_html": "<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>后台采用 node + ts + <span class=\"exturl\" data-url=\"aHR0cDovL3NvY2tldC5pbw==\">socket.io</span><br>\n 本地 demo 在浏览器运行没问题<br>\n在真机测试连接不上</p>\n<h2 id=\"ide版本号\"><a class=\"markdownIt-Anchor\" href=\"#ide版本号\">#</a> IDE 版本号</h2>\n<p>2.4.2.20191115</p>\n<h2 id=\"uniapp前端代码\"><a class=\"markdownIt-Anchor\" href=\"#uniapp前端代码\">#</a> uniapp 前端代码</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> ‘要发送的数据’</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> SocketTask1 <span class=\"token operator\">=</span> uni<span class=\"token punctuation\">.</span><span class=\"token function\">connectSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ws://localhost:3000/ws\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>SocketTask1<span class=\"token punctuation\">.</span><span class=\"token function\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接成功\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  SocketTask1<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> msg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'发送成功'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'发送失败'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>SocketTask1<span class=\"token punctuation\">.</span><span class=\"token function\">onMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收数据\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>SocketTask1<span class=\"token punctuation\">.</span><span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>SocketTask1<span class=\"token punctuation\">.</span><span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接关闭\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"解决过程\"><a class=\"markdownIt-Anchor\" href=\"#解决过程\">#</a> 解决过程</h2>\n<p>经过反复排查问题所在  最终确定问题出现在连接问题上<br>\n因此调用了其他 ws 接口  发现并没有问题<br>\n笔者这里后台使用的是 <span class=\"exturl\" data-url=\"aHR0cDovL3NvY2tldC5pbw==\">socket.io</span> ，后台 <span class=\"exturl\" data-url=\"aHR0cDovL3NvY2tldC5pbw==\">socket.io</span> 模块换成了 websocket<br>\n 测试  完美 连接上了～</p>\n<h2 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\">#</a> 结论</h2>\n<p>uniapp 的 socketTask 方法是基于 websocket 建立的连接<br>\n而 websocket 是基于 <span class=\"exturl\" data-url=\"aHR0cDovL3NvY2tldC5pbw==\">socket.io</span> 开发出来使用 web 端的一个模块  双方有共同性但不具备联系性<br>\n因此前后端使用 websocket 需注意是否一致</p>\n",
            "tags": [
                "websocket"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/nuxtFont/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/nuxtFont/",
            "title": "nuxt引入字体问题",
            "date_published": "2024-03-27T10:29:33.519Z",
            "content_html": "<p>nuxt 默认配置了 css 文件的 url-loader<br>\nscss 文件引入字体需要单独配置  build 中的 extend<br>\n 具体如何配置  有待研究  暂且记录下这个问题</p>\n<p>这里顺便记录下中英文引用不同字体的问题<br>\n英文字体名字放前面，中文放后面  这是因为英文字体不识别中文字体  系统选择 font-family 时自动从前面开始一个个寻找<br>\n如果不识别自动跳过  因此大概代码如下：</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'英文'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'英文.ttf'</span><span class=\"token punctuation\">)</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'中文'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'中文.ttf'</span><span class=\"token punctuation\">)</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token selector\">.body</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'英文'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'中文'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>具体规则参考网址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZ29sb3ZpbmcvcC85NzIxMzI4Lmh0bWw=\">https://www.cnblogs.com/goloving/p/9721328.html</span></p>\n",
            "tags": [
                "nuxt"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/optimization/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/optimization/",
            "title": "nuxt打包压缩代码",
            "date_published": "2024-03-27T10:29:33.519Z",
            "content_html": "<p>webpack4 中使用 <font color=\"#FF0000\" >uglifyjs-webpack-plugin</font> 来压缩代码会报错<br>\n网上有人说是<font color=\"#FF00FF\" >uglifyjs</font>不支持 ES6 语法，babel 会把项目中的 es6 编译成 es5<br>\n 但是 node_modules 中会存在 es6 的  而这里的代码 babel 并不会帮助一块编译  因此还是会报错</p>\n<p>这里是在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5udXh0anMub3JnLw==\">nuxt</span> 开发中打包删除 console.log 和 debugger 遇到的<br>\n曾尝试将 <font color=\"#FF00FF\" >uglifyjs-webpack-plugin</font> 放入 package.json 的开发模式所需插件中，也就是 --save–dev 安装<br>\n但是并没有用  由此看来不是这个方向的问题</p>\n<p>网上大神的解决方案：  手动设置 mode: ‘development’  将其设置为开发模式<br>\n这样就可以不添加任何代码就可以使用</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">optimization</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">minimizer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UglifyJsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>掉了无数头发的我陷入了沉思：<br>\n我这个是 nuxt 项目  nuxt.config.js 里面设置 mode 应该是 spa  或者 universal  怎么可能设置为开发或生产模式呢？<br>\n于是我抛弃了这个思路  尝试从 nuxt 文档上找答案  功夫不负有心人<br>\n在 build 配置中发现了这个东西：</p>\n<h1>optimization</h1>\n<p>仔细看才发现  terser-webpack-plugin 这个插件  原来 nuxt 中压缩手段和 webpack4 还是有些许区别<br>\n可能是因为 nuxt 需要打包服务端的原因？（猜想）<br>\n所以才会将 webpack 的  UglifyJsPlugin () 这个插件封装了一层？<br>\n按照文档配置了下之后 npm run build  果然没问题了  谢天谢地  终于搞定了<br>\n这里附上文档网址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5udXh0anMub3JnL2FwaS9jb25maWd1cmF0aW9uLWJ1aWxkI29wdGltaXphdGlvbg==\">https://zh.nuxtjs.org/api/configuration-build#optimization</span></p>\n<p>nuxt 的问题在网上很少  只能一点点自己摸索  还是要多看文档  多了解版本差异啊！</p>\n",
            "tags": [
                "nuxt"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/eip404/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/27/eip404/",
            "title": "EIP-404是什么?",
            "date_published": "2024-03-27T06:03:00.000Z",
            "content_html": "<h1 id=\"爆火的pandora\"><a class=\"markdownIt-Anchor\" href=\"#爆火的pandora\">#</a> 爆火的 Pandora</h1>\n<p>提起 <code>EIP-404</code> ，就不得不提起 2 月份爆火的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuc2VhLmlvL2NvbGxlY3Rpb24vcGFuZG9yYS1yZXBsaWNhbnRz\"> Pandora</span>， <code>Pandora</code>  作为首个 ERC404 代币，单枚价格持续创新高，最高飙升至 $31,401，今天我们就聊聊他爆火的背后。</p>\n<h1 id=\"pandora和erc404背景\"><a class=\"markdownIt-Anchor\" href=\"#pandora和erc404背景\">#</a> Pandora 和 ERC404 背景</h1>\n<p>Pandora 是第一个基于 ERC404 代币标准构建的代币，该 ERC404 是为创作者和开发者等开源的实验性代币标准，也是混合 ERC20 / ERC721 实现，具有原生流动性和碎片化等特点。</p>\n<p>Pandora 由 @maybectrlfreak（ctrl）和 @searnseele（Searn） 共同构建，核心标准 ERC404 由 Coinbase 前软件工程师 @0xacme（Acme）在 Github 上发布。</p>\n<ul>\n<li>@maybectrlfreak：也是投资初创 Syndicate 的天使投资人。Syndicate 推特 Profile 页面显示， Syndicate 首条推特发布于 1 月 22 日，对 BRC20 和 Ordinals 交易终端 BeFi Labs 进行了早期投资。此后，除与 BeFi Labs 相关内容之外，暂未发布其他内容。</li>\n<li>@searnseele（Searn）</li>\n<li>@0xacme（Acme）：Acme 未在推特简介中提及 Pandora，不过，其在 Github 上发布了 <a href=\"https://github.com/0xacme/ERC404\">ERC404 标准</a>。Acme 曾任职于 Coinbase。</li>\n</ul>\n<p>谈及 ERC404 的来源，就不得不提及之前  <code>EMERALD</code>  合约被攻击。据 ctrl 描述，当时，任何人都可以从任何预定义的池中转移和耗尽资金。如果从池发送，则将绕过转移检查。这是代码中一个明显缺陷，看起来像是一个伪装成漏洞的 rug。再加上，代币转移逻辑非常复杂，导致 ERC20 和 ERC721 余额不匹配。ctrl 还因为此损失了 3 万美元，但其认为这个概念很有前景，并且确实有机会将其作为一种代币标准而存在。</p>\n<p>因此，ctrl 和 Acme 在商量之后给  <code>EMERALD</code>  开发者提供了问题修复建议，但  <code>EMERALD</code>  开发者说其不是开发人员，而是使用了 ChatGPT。在沟通过程中， <code>EMERALD</code>  开发者表明自己很穷，并且想要先快速启动一个 rug 续集。在这之后，ctrl、Acme 以及 Searn 决定自己重新推出，这也是 Pandora 的由来。</p>\n<h1 id=\"erc404-是什么\"><a class=\"markdownIt-Anchor\" href=\"#erc404-是什么\">#</a> ERC404 是什么？</h1>\n<p>ERC404 标准试图融合 ERC-20 标准和 ERC-721 标准的部分特性，通过 ERC-20 标准的代币可拆分性增加 ERC-721 标准 NFT 的流动性，目前还是一个实验性协议，很多 NFT 平台也从此衍生出 ERC-404-a 版本试图改善平台 NFT 的流动性问题。</p>\n<p>不过，ERC404 标准文档也指出，这里的 ERC721 实现略微有些不标准，代币会根据底层 / 碎片化的转移而反复被销毁和铸造，目的是创建一种具有原生碎片化、流动性并鼓励交易来培育具有独特特征集的 NFT。即，如果出售 NFT，就不再拥有代币，如果出售代币，就不再拥有 NFT。</p>\n<h1 id=\"erc-404的实际流转\"><a class=\"markdownIt-Anchor\" href=\"#erc-404的实际流转\">#</a> ERC-404 的实际流转</h1>\n<p>我们还是拿 <code>Pandora</code>  来说，2 月份 <code>Pandora</code>  发行了 <code>10000</code>  个 Replicant（即 <code>ERC-404</code> ）Avatar NFT，上架到 uniswap，如下图所示，该系列存在五个稀有度等级，根据颜色区分。当用户与 Pandora ERC404 代币（而非 Replicant NFT）交互时，Replicant NFT 可能会被销毁，也可能随后重新生成。从流动性池购买的每个 Pandora 代币都会生成一个新的 Replicant。当 Pandora ERC404 被出售或转移时，其相应的 Replicant 将被销毁，并在接收地址生成一个新的 Replicant。每次 Replicant NFT 再生时，稀有度都会随机化。</p>\n<img data-src=\"/2024/03/27/eip404/box.jpg\" class=\"\">\n<p>对此，他的他的实际流转逻辑如下 (这块来自朋友<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbmJhbmcuZXRoLmxpbW8v\"> anbang.eth</span> 的总结)：</p>\n<ul>\n<li>当用户地址少于 1 个代币的时候：只有币，没有图</li>\n<li>当用户地址大于 1 个代币的时候：既有币，也有图</li>\n<li>当用户买入代币，每凑满 1 个整数，就会铸造 1 个 NFT</li>\n<li>当用户在 Uni 上购买 1 枚代币，用户除了得到代币外，还会收到一个生成的 NFT（ERC-721 标准），可以直接在 NFT 市场上交易</li>\n<li>当用户地址恰好有一个代币：当卖出一部分的时候，会随机烧毁一个 NFT。（不能指定）</li>\n<li>当用户在 Uni 上出售 1 枚代币，所拥有的 NFT 也随即被自动销毁</li>\n<li>当用户将持有的 1 枚代币转账到新地址，原地址的 NFT 被销毁，新地址中会随即生成一个全新的随机 NFT</li>\n<li>同理当从市场上购买一个 NFT 后，也会收到 1 个代币，出售这个 NFT 后，代币也会随即消失</li>\n</ul>\n<p>也就是说，ERC-404 代币在进行转账时，对方账户接收到的 NFT 的稀有度等级无法得到保证，有可能本身你拥有一个最稀有的 NFT，而转到对方账户时对方只能得到一个最普遍的 NFT，有利也有弊</p>\n<h2 id=\"利端\"><a class=\"markdownIt-Anchor\" href=\"#利端\">#</a> 利端</h2>\n<ul>\n<li>解决了 NFT 的流动性问题，因为当 1 枚 NFT 的价格过高，对于普通人来说都是望而却步</li>\n<li>当筹集到 <code>1 ether</code>  代币时随机铸造出来的 NFT 有可能直接让人得到最稀有的 NFT</li>\n<li>同上所说，这种机制能激励用户在流动性池以外的第三方市场上进行交易，或者直接通过转账来刷新稀有度等级</li>\n</ul>\n<h2 id=\"弊端\"><a class=\"markdownIt-Anchor\" href=\"#弊端\">#</a> 弊端</h2>\n<ul>\n<li>沉重的内部交易逻辑使得交易所需 <code>GAS</code>  费高于普通 NFT 交易，希望能得到改善优化</li>\n<li>由于铸造的随机性，使得转账 NFT 时无法按照稀有度等级来抬高价格进行收益</li>\n</ul>\n<h2 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\">#</a> 解决方案</h2>\n<p>Pandora 将发布一项功能，允许用户存储 Replicant，这样以来，在转移 Pandora ERC404 时不会销毁或重新生成 Replicant，期待 ERC-404 接下来的发展</p>\n",
            "tags": [
                "EIP",
                "EIP-404"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/26/eip1159/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/26/eip1159/",
            "title": "EIP-1559是什么?",
            "date_published": "2024-03-26T14:25:00.000Z",
            "content_html": "<h2 id=\"以太坊中燃烧的eip-1559是什么\"><a class=\"markdownIt-Anchor\" href=\"#以太坊中燃烧的eip-1559是什么\">#</a> 以太坊中燃烧的 EIP-1559 是什么？</h2>\n<p>EIP-1559 本质上是关于以太坊网络交易定价机制的解决方案，它包括每区块网络费用的固定部分 <code>base fee</code>  (也就是基础费用，会被销毁，矿工收不到这笔费用)，同时还有动态的可伸缩的区块大小设计，以应对瞬时的网络拥堵。虽然每区块的基础费用是固定的，但是它会根据网络的拥堵情况，调节每区块的基础费用，它有一个公式用来调整基础费用的上升或下降。它会根据上一个区块所用的 gas 和目标 gas ( <code>gas target</code> ，也就是之前的 <code>gas limit</code> ) 来调整。</p>\n<p>当区块高于目标 gas 费 (用于衡量消息消耗的计算和存储资源的费用) 价格，基础费用上升，当区块低于目标 gas 价格，基础费用下降。在拥堵时，除了基础费用，还可以通过打赏费用 (小费) 来激励矿工将用户交易打包进区块。交易可以指定基础费用和小费的上限。</p>\n<p>EIP-1559 这一提案还包括过渡性方案，开始时，区块的一半保留原来的竞价机制，一半采用新的费用机制，并逐渐过渡到新的方案。因此，在新规则里，基本费用会被销毁，矿工无法获得；矿工的收益主要是新增区块奖励 + 小费。</p>\n<h2 id=\"总结eip-1559协议内容主要有以下4点\"><a class=\"markdownIt-Anchor\" href=\"#总结eip-1559协议内容主要有以下4点\">#</a> 总结 EIP-1559 协议内容主要有以下 4 点：</h2>\n<ul>\n<li>\n<p>让所有的交易都尽可能支付相同的费率，提升用户体验。</p>\n</li>\n<li>\n<p>实施弹性的区块大小限制机制，均衡化区块空间的使用。</p>\n</li>\n<li>\n<p>提出用永久性区块补贴来激励矿工，提高网络安全性。</p>\n</li>\n<li>\n<p>规定交易必须消耗特定数量的 ETH，增加经济抽象的难度。</p>\n</li>\n</ul>\n<p>以太坊主网于区块高度  <code>12,965,000</code>  完成伦敦硬分叉升级， EIP-1559 也随之生效，这也开始让以太坊网络根据交易需求和区块大小动态调整每笔交易的 Base Fee，而这部分的费用将直接燃烧销毁，数据显示，在伦敦硬分叉升级完的 13 个小时内， <code>燃烧以太坊3300</code>  多枚。</p>\n<p>所以，采用 EIP-1559 后，支付给矿工的费用预计将会减少，但这也使得共识算法从工作量证明机制 (PoW) 变成到股权证明机制 (PoS) 的想法更进一步。小结众所周知，分叉对于区块链来说，就相当于一个技术迭代的过程，随着人们不断发现区块链技术现有的限制，只有不断升级和扩展这项技术，才能让区块链技术走向成熟。</p>\n<p>当然，这种分叉跟区块链不可篡改的特性正在背道而驰，但没有天生完美的技术，区块链也不例外，技术的发展如果在发生错误时都不可控，那这种技术就无法做到普世，人们对它的信任度也无法提升，且分叉的结果是由社区成员投票决定的，某种程度上来说依旧遵守着去中心化的原则。</p>\n<h2 id=\"最后记住\"><a class=\"markdownIt-Anchor\" href=\"#最后记住\">#</a> 最后记住</h2>\n<p>以太坊 EIP-1559 Gas 费计算主要包括： <code>基本费</code> 、 <code>优先费</code> 、 <code>最高费</code></p>\n",
            "tags": [
                "EIP",
                "EIP-1559"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/25/mpc2/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/25/mpc2/",
            "title": "多方安全计算-MPC",
            "date_published": "2024-03-25T08:52:00.000Z",
            "content_html": "<h1 id=\"多方安全计算-mpc-secure-multi-party-computation\"><a class=\"markdownIt-Anchor\" href=\"#多方安全计算-mpc-secure-multi-party-computation\">#</a> 多方安全计算 - MPC（ Secure Multi-Party Computation ）</h1>\n<p>多方安全计算 (MPC) 是在无可信第三方情况下，多个参与方协同完成计算目标，并保证每个参与者除计算结果外均不能得到其他参与实体的任何输入信息。多方安全计算问题最初起源于 1982 年姚期智院士提出的百万富翁问题，后来经过多年不断的发展，成为目前密码学的一个重要分支。多方安全计算是基于密码学的算法协议来实现隐私保护，常见的多方安全计算协议包括秘密共享（Secret Sharing，SS） 、混淆电路（Garbled Circuit，GC）、同态加密（Homomorphic Encryption，HE）、不经意传输（Oblivious Transfer，OT）等。多方安全计算技术可以获取数据使用价值，却不泄露原始数据内容，保护隐私，可适用于多方联合数据分析、数据安全查询（PIR，Private Information Retrieval）、隐私求交（PSI，rivate Set Intersection）、数据可信交换等应用场景。一系列用于 MPC 的开源库（例如 ABY、EMP-toolkit，FRESCO，JIFF 、MP-SPDZ，MPyC, SCALE-MAMBA，和 TinyGable 等) 得到了发展，进一步推动了 MPC 的应用和部署。</p>\n<p>作者：京东云开发者<br>\n链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTgyMDcyOTUzMjQzMTcyOTIz\">https://juejin.cn/post/7182072953243172923</span><br>\n 来源：稀土掘金<br>\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n",
            "tags": [
                "MPC"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/25/mpc/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/25/mpc/",
            "title": "MPC协议",
            "date_published": "2024-03-25T07:52:00.000Z",
            "content_html": "<h1 id=\"mpc介绍\"><a class=\"markdownIt-Anchor\" href=\"#mpc介绍\">#</a> MPC 介绍</h1>\n<p>安全多方计算（Secure Multi-Party Computation），记为 SMPC/ MPC，它是指在无可信第三方的情况下，多个参与方协同计算一个约定的函数。MPC 起源于姚期智先生于 1982 年提出的百万富翁问题及其密码学解法，后来不断发展和完善，已成为当前密码学的一个重要分支。<br>\nSafeheron Lab 一直以来深耕 MPC 研究，与姚期智院士创建的图灵研究院共建联合实验室，深度参与可信计算与区块链融合的研究，Safeheron Lab 已将部分 MPC 研究课题开源。<br>\n从 2018 年开始，MPC 技术被应用在区块链数字资产领域的私钥安全设计中。据不完全统计，4 年时间内，超过 3 万亿美元的数字资产转移通过 MPC 私钥方案签署完成，这一方案被纽约梅隆等上千家银行和顶级机构采用。2010 年后，MPC 开始越来越频繁地进入实用阶段。<br>\n目前 MPC 协议可以分成两大类：通用 MPC 协议和专用 MPC 协议。<br>\n通用 MPC 协议，顾名思义，具有通用性，理论上可支持任何计算任务。它一般基于混淆电路（Garbled Circuit）实现。具体实现步骤是将计算逻辑编译成电路，然后混淆执行。然而，随着问题的复杂化（大部分常见问题就很复杂），电路的规模也会迅速扩大，导致计算效率大大降低。<br>\n专用 MPC 协议则是指为解决特定问题所构造出的特殊 MPC 协议。由于是针对性构造并进行优化，专用算法的效率会比基于混淆电路的通用框架高很多。常见 MPC 专用算法包含，四则运算、比较运算、矩阵运算、隐私集合求交集、隐私数据查询、私钥门限签名等。<br>\n在实际应用场景中，人们常常会寻求快速高效的专用 MPC 协议。</p>\n<h1 id=\"区块链领域的-mpc-研究\"><a class=\"markdownIt-Anchor\" href=\"#区块链领域的-mpc-研究\">#</a> 区块链领域的 MPC 研究</h1>\n<p>随着研究的推进，一些重要的 MPC 多签协议相继被发表。在 MPC-ECDSA 研究方向，典型的有，Lin17 提出的关于 ECDSA 的两方签名算法和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAxOS8xMTQucGRm\">GG18</span> 提出的多方参与的门限签名协议。此后，算法协议层出不穷，比如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAxOC80OTkucGRm\">DKLS18</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAxOS81MjMucGRm\">DKLS19</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAyMC81NDAucGRm\">GG20</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAyMC80OTIucGRm\">MPC-CMP</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAyMi8yOTcucGRm\">DMZ-21</span> 等等。这些算法研究的重心在于：</p>\n<ul>\n<li>减少通信次数</li>\n<li>降低计算工作量</li>\n<li>安全性分析与安全增强</li>\n<li>增强对恶意敌手的识别能力</li>\n<li>降低生成私钥的算力要求</li>\n</ul>\n<p><code>更快、更高效、更安全</code> 始终是 MPC 研究的目标。</p>\n<h1 id=\"开源-mpc-ecdsa-协议\"><a class=\"markdownIt-Anchor\" href=\"#开源-mpc-ecdsa-协议\">#</a> 开源 MPC-ECDSA 协议</h1>\n<p>Safeheron 此次一共开源 3 种具有代表性的 MPC-ECDSA 协议：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAxOS8xMTQucGRm\">GG18</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAyMC81NDAucGRm\">GG20</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAyMC80OTIucGRm\">MPC-CMP</span></li>\n</ul>\n<p>其中， <code>GG18</code>  是 Rosario Gennaro 和 Steven Goldfeder 提出来的，并且是第一个有影响力的、进入实用阶段的 MPC-ECDSA 门限多签协议。大部分后续提出的 MPC-ECDSA 门限多签协议，都可以看作是  <code>GG18</code>  不同角度的优化版本。需要注意的是， <code>GG18</code>  早期版本存在一些安全隐患，在安全分析报告的基础上，此次开源的算法对其进行了针对性的修正。</p>\n",
            "tags": [
                "MPC"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/24/okmpc/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2024/03/24/okmpc/",
            "title": "OKX MPC wallet",
            "date_published": "2024-03-24T04:10:00.000Z",
            "content_html": "<p>OKX 无私钥钱包基于 MPC 技术，将原本的 1 个完整私钥，变成 3 个各自生成的私钥碎片，分开存储，签名时使用其中 2 份私钥碎片即可完成签名，过程中不会产生完整的私钥。在创建无私钥钱包时，OKX 服务器生成一份私钥碎片 1，用户设备生成私钥碎片 2 和私钥碎片 3，其中私钥碎片 2 加密保存在用户设备上，私钥碎片 3 加密备份到 iCloud 或 Google Drive。交易签名时使用私钥碎片 1 + 私钥碎片 2，私钥碎片 3 用作备份。<br>\n此外，OKX 首创紧急出口功能，使用者可在紧急场景下，透过完全由自己管理的两个私钥分片（私钥碎片 2 和私钥碎片 3），即可导出私钥提走资产，实现了真正意义上的去中心化自托管无私钥钱包。使用 OKX 帐户即可轻松建立该钱包，无需再管理复杂的私钥或者助记词，非常注重用户体验</p>\n",
            "tags": [
                "MPC",
                "Web3钱包"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/14/installRedis/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/14/installRedis/",
            "title": "mac使用brew安装redis报错：Failed to download resource \"ca-certificates\"",
            "date_published": "2022-09-14T14:30:00.000Z",
            "content_html": "<h1 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h1>\n<p>在 mac 下使用 brew 安装 redis 报错如下：</p>\n<img data-src=\"/2022/09/14/installRedis/error.jpg\" class=\"\">\n<h1 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<p>在命令行中输入：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HOMEBREW_BOTTLE_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr></table></figure><p>此命令用于临时更改国内的镜像设置。<br>\n再次执行  <code>brew install redis</code> ，大功告成。</p>\n",
            "tags": [
                "mac",
                "命令行"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/14/installBrew/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/14/installBrew/",
            "title": "mac安装brew报错 fatal unable to access 'https://github.com/Homebrew/brew/'",
            "date_published": "2022-09-14T14:00:00.000Z",
            "content_html": "<h1 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h1>\n<p>在 mac 下安装 brew 报错如下：</p>\n<img data-src=\"/2022/09/14/installBrew/error.jpg\" class=\"\">\n<h1 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<p>将 dns 设置首选为 8.8.8.8</p>\n<ul>\n<li>步骤:\n<ul>\n<li>打开系统偏好设置</li>\n<li>选择网络</li>\n<li>高级</li>\n<li>进入 DNS 选项</li>\n<li>在左侧 DNS 中添加 8.8.8.8 并将它拖到首选</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"安装完执行brew却报错找不到命令\"><a class=\"markdownIt-Anchor\" href=\"#安装完执行brew却报错找不到命令\">#</a> 安装完执行 brew 却报错找不到命令</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>zsh: <span class=\"token builtin class-name\">command</span> not found: brew</pre></td></tr></table></figure><p>原因是缺少环境变量，将以下变量放到 <code>~/.zprofile</code>  文件下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HOMEBREW_PREFIX</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HOMEBREW_CELLAR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew/Cellar\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HOMEBREW_REPOSITORY</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew/bin:/opt/homebrew/sbin<span class=\"token variable\">$&#123;<span class=\"token environment constant\">PATH</span>+<span class=\"token operator\">:</span>$PATH&#125;</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">MANPATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew/share/man<span class=\"token variable\">$&#123;MANPATH+<span class=\"token operator\">:</span>$MANPATH&#125;</span>:\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">INFOPATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew/share/info:<span class=\"token variable\">$&#123;INFOPATH<span class=\"token operator\">:-</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>执行  <code>brew help</code> ，大功告成。</p>\n",
            "tags": [
                "mac",
                "命令行"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/fontHex/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/fontHex/",
            "title": "css某些字体中0x会变成0",
            "date_published": "2022-09-09T09:13:00.000Z",
            "content_html": "<h1 id=\"现象\"><a class=\"markdownIt-Anchor\" href=\"#现象\">#</a> 现象</h1>\n<p>在使用 Inter 字体包时，同样的设置，字符串 <code>0xa1</code>  和 <code>0x1a</code>  的显示不同，具体表现是当 <code>0x</code>  后面是字母时，显示正常，当 <code>0x</code>  后面是数字时， <code>x</code>  会变成 <code>✖️</code></p>\n<img data-src=\"/2022/09/09/fontHex/0xa1.png\" class=\"\">\n<h1 id=\"字体设置\"><a class=\"markdownIt-Anchor\" href=\"#字体设置\">#</a> 字体设置</h1>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 100<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-Thin.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 200<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-ExtraLight.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 300<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-Light.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-Regular.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-Medium.ttf\"</span><span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 600<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-SemiBold.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-Bold.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 800<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-ExtraBold.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Inter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 900<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">\"./Inter-Black.ttf\"</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><br/>\n<p>很明显，并不是字体设置的问题，因为字体如果设置不正确，那么应该所有都不会正确，但是其他字体显示就是正常的。<br>\n排除设置问题，剩下就是字体问题，初步猜测应该是这个字体在浏览器下对 16 进制字符识别有不同的处理。</p>\n<h1 id=\"解决办法\"><a class=\"markdownIt-Anchor\" href=\"#解决办法\">#</a> 解决办法</h1>\n<p>在尝试了很多个属性设置之后，发现设置 <code>text-rendering: optimizeSpeed;</code>  竟然有效果，查询了下这个属性：</p>\n<blockquote>\n<p>当 text-rendering 为 optimizeSpeed 时，浏览器在绘制文本时将着重考虑渲染速度，而不是易读性和几何精度，它会使字间距和连字无效。</p>\n</blockquote>\n<p>因此，这个设置会让浏览器暂时忽略对字符的读取，也就是易读性和几何精度，直接完整渲染。</p>\n",
            "tags": [
                "css"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/macDeleteColors/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/macDeleteColors/",
            "title": "MacOS 删除相同的颜色描述文件",
            "date_published": "2022-09-09T09:13:00.000Z",
            "content_html": "<p>Mac 电脑外接显示器用久了打开显示器设置里面，发现一堆相同的颜色描述文件，看着就很烦，查了下，这些文件是在外接显示器的时候自动生成的，在访达里面删除一个个的太麻烦了，推荐使用命令行打开 folder 直接批量删除掉</p>\n<p>路径：</p>\n<blockquote>\n<p>/Library/ColorSync/Profiles/Displays</p>\n</blockquote>\n<p>打开终端，执行命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">open</span> /Library/ColorSync/Profiles/Displays</pre></td></tr></table></figure><img data-src=\"/2022/09/09/macDeleteColors/screen.jpg\" class=\"\">\n<p>直接选中不需要的删除掉就行了</p>\n<p>mac 为什么会有这么让人难受的逻辑让人很费解🤔</p>\n",
            "tags": [
                "Mac"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/viteDagre/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/09/09/viteDagre/",
            "title": "vite 中使用 dagre-d3 报错",
            "date_published": "2022-09-09T09:13:00.000Z",
            "content_html": "<h1 id=\"报错信息\"><a class=\"markdownIt-Anchor\" href=\"#报错信息\">#</a> 报错信息</h1>\n<p>在本地 dev 环境中一切正常，但 build 完成后到线上，就发生了报错：</p>\n<blockquote>\n<p>TypeError: Cannot read properties of undefined (reading ‘layout’)</p>\n</blockquote>\n<p>如下图：</p>\n<img data-src=\"/2022/09/09/viteDagre/error-1.jpg\" class=\"\">\n<h1 id=\"原使用方法\"><a class=\"markdownIt-Anchor\" href=\"#原使用方法\">#</a> 原使用方法</h1>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dagreD3 <span class=\"token keyword\">from</span> <span class=\"token string\">'dagre-d3'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dagreD3<span class=\"token punctuation\">.</span>graphlib<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setGraph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">multigraph</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">compound</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// rank direction</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>g<span class=\"token punctuation\">.</span><span class=\"token function\">graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rankdir <span class=\"token operator\">=</span> <span class=\"token string\">\"RL\"</span></pre></td></tr></table></figure><h1 id=\"分析原因\"><a class=\"markdownIt-Anchor\" href=\"#分析原因\">#</a> 分析原因</h1>\n<blockquote>\n<p>是的，根据文档写出的代码出了问题，那么电脑的问题占了百分之 70，因此我砸了这台电脑换了台新的 mac，不得不说是真香（跑偏了～）</p>\n</blockquote>\n<p>上网上搜了下，并没有得到解决方法，只能自己研究下，一步步查看执行过程：</p>\n<h2 id=\"查找报错位置\"><a class=\"markdownIt-Anchor\" href=\"#查找报错位置\">#</a> 查找报错位置：</h2>\n<p>图中显示报错是变量 layout 找不到，因此一定是内部执行时遇到了问题，先找到 dagreD3 源码：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">graphlib</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/graphlib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">dagre</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/dagre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">intersect</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/intersect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">render</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/render\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">util</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./lib/version\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接着继续找到 graphlib：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* global window */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> graphlib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> require <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    graphlib <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"graphlib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// continue regardless of error</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>graphlib<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  graphlib <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>graphlib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> graphlib<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在这里发现当识别不到 <code>require</code>  时，便会去 <code>window</code>  下的 <code>graphlib</code>  寻找，那么原因就找到了，vite 默认是不支持 require 的，所以 graphlib 找到了 window 下的 graphlib，<br>\n可以想象后续执行一定是报错的，我们实验一下，在下方加入打印：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>graphlib<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It's been here.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  graphlib <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>graphlib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>graphlib<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> graphlib<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>执行一下：</p>\n<img data-src=\"/2022/09/09/viteDagre/error-2.jpg\" class=\"\">\n<br/>\n果然，在这个地方跪了，所以问题也找到了。\n<h2 id=\"问题的解决\"><a class=\"markdownIt-Anchor\" href=\"#问题的解决\">#</a> 问题的解决</h2>\n<p>既然是 <code>graphlib</code>  未找到，那么我们有两种解决方案</p>\n<ul>\n<li>第一：将 require 在 vite 打包前注入到 vite 中，这也是为什么 dev 的时候好好的，但是 build 之后就会报错，因为 vite 本地 server 是 node 环境，所以需要配置 vite 支持 require。</li>\n<li>第二：将 dagre-d3.min.js 放到 index.html 模板头部引入，这样 dagre-d3 就会被放入 window 下。</li>\n</ul>\n<p>Cat 这里使用的是第二种方式，比较暴力一些。</p>\n<h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h1>\n<blockquote>\n<p>报错信息很重要！<br>\n报错信息很重要！<br>\n报错信息很重要！</p>\n</blockquote>\n<p>重要的事情说三遍，开发中还是要善于分析报错信息，不然就会无脑被卡很久，说多了都是泪～</p>\n",
            "tags": [
                "vite",
                "dagre"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/04/03/twoPlus/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/04/03/twoPlus/",
            "title": "两数相加",
            "date_published": "2022-04-03T09:46:00.000Z",
            "content_html": "<h1 id=\"学算法\"><a class=\"markdownIt-Anchor\" href=\"#学算法\">#</a> 学算法</h1>\n<p>昨天于晚上时间开始了长达一个多小时时间的算法学习过程，今天巩固了一下昨天的所学知识，准备开始今天的题目学习。<br>\n我信心满满地打开了力扣题库中的第二题，名叫：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvYWRkLXR3by1udW1iZXJz\">两数相加</span>，好家伙，力扣题库中扑面而来的前两道题竟然都是做加法的题🥲</p>\n<p>fine，同样的</p>\n<h2 id=\"看一下题目\"><a class=\"markdownIt-Anchor\" href=\"#看一下题目\">#</a> 看一下题目</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>给你两个非空的<span class=\"token code-snippet code keyword\">`链表`</span>，表示两个非负的整数。它们每位数字都是按照逆序的方式存储的，并且每个节点只能存储一位数字。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>请你将两个数相加，并以相同形式返回一个表示和的链表。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>你可以假设除了数字 0 之外，这两个数都不会以 0  开头。</pre></td></tr></table></figure><p>示例 1：<br>\n<img data-src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/02/addtwonumber1.jpg\" alt=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/02/addtwonumber1.jpg\" width=\"480\" border=\"10\" /></p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>输入：l1 = [2,4,3], l2 = [5,6,4]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>输出：[7,0,8]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>解释：342 + 465 = 807.</pre></td></tr></table></figure><p>示例 2：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>输入：l1 = [0], l2 = [0]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>输出：[0]</pre></td></tr></table></figure><p>好家伙，又是一道奇怪的题，好好的相加硬是玩出了花儿来了，是的，我又被虐了，以我的思路我只能想到反转两个数组，然后相加，再反转回去🤔<br>\n在用我自己的思路去实现了遍，提交代码时告诉我错误，看了半天，原来不是数组，是个叫 <code>链表</code> 的结构体，说实话，一脸懵逼，什么是链表？</p>\n<h2 id=\"链表\"><a class=\"markdownIt-Anchor\" href=\"#链表\">#</a> 链表</h2>\n<p>祭出百度谷歌大法后，终于了解到什么是链表</p>\n<blockquote>\n<p>链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。 链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。 每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。</p>\n</blockquote>\n<p>其实就是一个存有前后指向的 <code>map</code>  类型，如此来说，我的思路再次被定格住了，完全没见过这样的操作呀，还是直接看题解吧。</p>\n<h1 id=\"学思维\"><a class=\"markdownIt-Anchor\" href=\"#学思维\">#</a> 学思维</h1>\n<p>由于输入的两个链表都是逆序存储数字的位数的，因此两个链表中同一位置的数字可以直接相加。</p>\n<p>我们同时遍历两个链表，逐位计算它们的和，并与当前位置的进位值相加。具体而言，如果当前两个链表处相应位置的数字为 n1，n2，进位值为 carry，则它们的和为 n1 + n2 + carry；其中，答案链表处相应位置的数字为 (n1 + n2 + carry) mod 10，而新的进位值为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mfrac><mrow><mi>n</mi><mn>1</mn><mo>+</mo><mi>n</mi><mn>2</mn><mo>+</mo><mi>c</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>y</mi></mrow><mn>10</mn></mfrac></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{c}\n\n\\frac {n1+n2+carry}{10}\n\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2572160000000001em;vertical-align:-0.378608em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8786080000000001em;\"><span style=\"top:-2.981392em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.897216em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.446108em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.378608em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>如果两个链表的长度不同，则可以认为长度短的链表的后面有若干个 0。</p>\n<p>此外，如果链表遍历结束后，有 carry &gt; 0，还需要在答案链表的后面附加一个节点，节点的值为 carry。</p>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>val <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> next<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @param &#123;ListNode&#125; l1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @param &#123;ListNode&#125; l2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @return &#123;ListNode&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">addTwoNumbers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">l1<span class=\"token punctuation\">,</span> l2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">let</span> head <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> tail <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> carry <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>l1 <span class=\"token operator\">||</span> l2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">const</span> n1 <span class=\"token operator\">=</span> l1 <span class=\"token operator\">?</span> l1<span class=\"token punctuation\">.</span>val <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">const</span> n2 <span class=\"token operator\">=</span> l2 <span class=\"token operator\">?</span> l2<span class=\"token punctuation\">.</span>val <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">const</span> sum <span class=\"token operator\">=</span> n1 <span class=\"token operator\">+</span> n2 <span class=\"token operator\">+</span> carry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>head<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            head <span class=\"token operator\">=</span> tail <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            tail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            tail <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        carry <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            l1 <span class=\"token operator\">=</span> l1<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            l2 <span class=\"token operator\">=</span> l2<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>carry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        tail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span>carry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"学习过程\"><a class=\"markdownIt-Anchor\" href=\"#学习过程\">#</a> 学习过程</h2>\n<p>对于我这种初学算法者来说，这段代码可谓是无厘头，乍眼一看，几乎看不懂，我在看这里的时候来回看了几次没发现关键点在哪里，脑海里似乎有个过程动画在复现，但是又不能完全理解，这里有几个关键点：</p>\n<ul>\n<li>始终在操作指向的 next</li>\n<li>保存进位</li>\n<li>位数不同补 0 处理</li>\n</ul>\n<p>我在第一点困扰了很久，为什么始终在操作 tail 和 tail 的 next，最终却 return head 呢？<br>\n想不明白，那就直接上手敲，打开了控制台，然后尝试了一番，终于得到结论了：</p>\n<blockquote>\n<p>在 js 中对象是引用关系，变量指针指向内存地址，因此 <code>head = tail = new ListNode(sum % 10)</code>  使得 <code>head</code>  始终指向 <code>tail</code> 。</p>\n</blockquote>\n<p>第二点好理解，每次位数之间相加最大值为 18，&gt;= 10 的时候，将进位保存，以便下个位数相加进位。<br>\n第三点的意思是当两个链表位数不同的时候，那么需要补 0，<br>\n例如：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>123 + 45678</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>↓</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1 -> 2 -> 3 -> 4 -> 0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token list punctuation\">+</span>    <span class=\"token list punctuation\">+</span>    <span class=\"token list punctuation\">+</span>    <span class=\"token list punctuation\">+</span>    + </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>4 -> 5 -> 6 -> 7 -> 8</pre></td></tr></table></figure><h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>我觉得这种方式是一种利用指针指向的便捷，类似使用的方案的有 vue 和 react 的虚拟 dom 的数据绑定，目的是为了减少空间复杂度，提升性能。</p>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/04/02/twoSum/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/04/02/twoSum/",
            "title": "两数之和",
            "date_published": "2022-04-02T08:43:00.000Z",
            "content_html": "<h1 id=\"学算法\"><a class=\"markdownIt-Anchor\" href=\"#学算法\">#</a> 学算法</h1>\n<p>两数之和是我入门力扣的第一道题，不知道在第一次看到题目的时候你们是不是跟我一样？<br>\n没错，就是看不懂😭<br>\n为什么两数之和要写算法去实现，不能直接相加吗？</p>\n<h2 id=\"看一下题目\"><a class=\"markdownIt-Anchor\" href=\"#看一下题目\">#</a> 看一下题目：</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>你可以按任意顺序返回答案。</pre></td></tr></table></figure><h2 id=\"示例1\"><a class=\"markdownIt-Anchor\" href=\"#示例1\">#</a> 示例 1：</h2>\n<blockquote>\n<p>输入：nums = [2,7,11,15], target = 9<br>\n 输出：[0,1]<br>\n 解释：因为 nums [0] + nums [1] == 9，返回 [0, 1]。</p>\n</blockquote>\n<p>好吧，家人们，是我草率了，原来是找出两个数相加等于 target 的索引，这题目出的就很好，我下意识的思考逻辑是，<br>\n按照冒泡排序的方式逐一匹配相加，但是这种方式显然很低级，肯定不会出现在这种算法题库中的。</p>\n<p>思考了一会儿，完全没有思路，无奈放弃思考了，俗话说，学得 1 加 1，方知 6 加 9，还是先看看题解吧。</p>\n<h1 id=\"学思维\"><a class=\"markdownIt-Anchor\" href=\"#学思维\">#</a> 学思维</h1>\n<p>看完题解后我恍然大悟，果然是有更优秀的方法的</p>\n<h2 id=\"哈希表\"><a class=\"markdownIt-Anchor\" href=\"#哈希表\">#</a> 哈希表</h2>\n<p>首先查询表中是否有 target - x，然后将 x 插入到哈希表中，即可保证不会让 x 和自己匹配。<br>\n这种方法是利用了 <code>Object</code>  的 <code>key</code>  值唯一性，以及天生的查找快速的特性，使得时间复杂性和空间复杂性都得到了减少。<br>\n因此，遍历过程中只需要查看表中是否有 target，如果有，那么当前索引就是结果。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">twosum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">let</span> dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> cur <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> dic<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            dic<span class=\"token punctuation\">[</span>target <span class=\"token operator\">-</span> cur<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> dic<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>学到了， <code>Object</code>  的 <code>key</code>  值唯一性还是很好用的，从这一刻开始我开启了算法学习的道路，同道者，共勉！</p>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/04/01/example/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2022/04/01/example/",
            "title": "例子",
            "date_published": "2022-04-01T08:43:00.000Z",
            "content_html": "<p>title: Markdown Style test<br>\ndate: 2018-7-24 23:31:06<br>\ntags:</p>\n<ul>\n<li>Foo</li>\n<li>Bar</li>\n</ul>\n<hr>\n<p>This post is originated from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vYXBhY2tlZXIvNDE1OTI2OA==\">here</span> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p>\n<span id=\"more\"></span>\n<hr>\n<h2 id=\"headers\"><a class=\"markdownIt-Anchor\" href=\"#headers\">#</a> Headers</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span> H1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">##</span> H2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">###</span> H3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">####</span> H4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#####</span> H5</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">######</span> H6</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Alternatively, for H1 and H2, an underline-ish style:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token title important\">Alt-H1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">======</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token title important\">Alt-H2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">------</span></span></pre></td></tr></table></figure><h1 id=\"h1\"><a class=\"markdownIt-Anchor\" href=\"#h1\">#</a> H1</h1>\n<h2 id=\"h2\"><a class=\"markdownIt-Anchor\" href=\"#h2\">#</a> H2</h2>\n<h3 id=\"h3\"><a class=\"markdownIt-Anchor\" href=\"#h3\">#</a> H3</h3>\n<h4 id=\"h4\"><a class=\"markdownIt-Anchor\" href=\"#h4\">#</a> H4</h4>\n<h5 id=\"h5\"><a class=\"markdownIt-Anchor\" href=\"#h5\">#</a> H5</h5>\n<h6 id=\"h6\"><a class=\"markdownIt-Anchor\" href=\"#h6\">#</a> H6</h6>\n<p>Alternatively, for H1 and H2, an underline-ish style:</p>\n<h1 id=\"alt-h1\"><a class=\"markdownIt-Anchor\" href=\"#alt-h1\">#</a> Alt-H1</h1>\n<h2 id=\"alt-h2\"><a class=\"markdownIt-Anchor\" href=\"#alt-h2\">#</a> Alt-H2</h2>\n<h2 id=\"emphasis\"><a class=\"markdownIt-Anchor\" href=\"#emphasis\">#</a> Emphasis</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Emphasis, aka italics, with <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">asterisks</span><span class=\"token punctuation\">*</span></span> or <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">underscores</span><span class=\"token punctuation\">_</span></span>.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Strong emphasis, aka bold, with <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">asterisks</span><span class=\"token punctuation\">**</span></span> or <span class=\"token bold\"><span class=\"token punctuation\">__</span><span class=\"token content\">underscores</span><span class=\"token punctuation\">__</span></span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Combined emphasis with <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">asterisks and <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">underscores</span><span class=\"token punctuation\">_</span></span></span><span class=\"token punctuation\">**</span></span>.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Strikethrough uses two tildes. <span class=\"token strike\"><span class=\"token punctuation\">~~</span><span class=\"token content\">Scratch this.</span><span class=\"token punctuation\">~~</span></span></pre></td></tr></table></figure><p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>\n<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>\n<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>\n<p>Strikethrough uses two tildes. <s>Scratch this.</s></p>\n<h2 id=\"lists\"><a class=\"markdownIt-Anchor\" href=\"#lists\">#</a> Lists</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> First ordered list item</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token list punctuation\">2.</span> Another item</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token list punctuation\">*</span> Unordered sub-list.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token list punctuation\">1.</span> Actual numbers don't matter, just that it's a number</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token list punctuation\">1.</span> Ordered sub-list</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token list punctuation\">4.</span> And another item.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   To have a line break without a paragraph, you will need to use two trailing spaces.  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   Note that this line is separate, but within the same paragraph.  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token list punctuation\">*</span> Unordered list can use asterisks</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token list punctuation\">-</span> Or minuses</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token list punctuation\">+</span> Or pluses</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token list punctuation\">-</span> Paragraph In unordered list</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  For example like this.</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Common Paragraph with some text.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>And more text.</pre></td></tr></table></figure><ol>\n<li>First ordered list item</li>\n<li>Another item</li>\n</ol>\n<ul>\n<li>Unordered sub-list.</li>\n</ul>\n<ol>\n<li>\n<p>Actual numbers don’t matter, just that it’s a number</p>\n</li>\n<li>\n<p>Ordered sub-list</p>\n</li>\n<li>\n<p>And another item.</p>\n<p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>\n<p>To have a line break without a paragraph, you will need to use two trailing spaces.<br>\nNote that this line is separate, but within the same paragraph.<br>\n(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>\n</li>\n</ol>\n<ul>\n<li>Unordered list can use asterisks</li>\n</ul>\n<ul>\n<li>Or minuses</li>\n</ul>\n<ul>\n<li>Or pluses</li>\n</ul>\n<ul>\n<li>\n<p>Paragraph In unordered list</p>\n<p>For example like this.</p>\n</li>\n</ul>\n<p>Common Paragraph with some text.<br>\nAnd more text.</p>\n<h2 id=\"inline-html\"><a class=\"markdownIt-Anchor\" href=\"#inline-html\">#</a> Inline HTML</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>To reboot your computer, press <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kbd</span><span class=\"token punctuation\">></span></span>ctrl<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kbd</span><span class=\"token punctuation\">></span></span>+<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kbd</span><span class=\"token punctuation\">></span></span>alt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kbd</span><span class=\"token punctuation\">></span></span>+<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kbd</span><span class=\"token punctuation\">></span></span>del<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kbd</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>Definition list<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span>Is something people use sometimes.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token code keyword\">    &lt;dt>Markdown in HTML&lt;/dt></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &lt;dd>Does *not* work **very** well. Use HTML &lt;em>tags&lt;/em>.&lt;/dd></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><dl>\n    <dt>Definition list</dt>\n    <dd>Is something people use sometimes.</dd>\n<pre><code>&lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n</code></pre>\n</dl>\n<h2 id=\"links\"><a class=\"markdownIt-Anchor\" href=\"#links\">#</a> Links</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm an inline-style link</span>](<span class=\"token url\">https://www.google.com</span>)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm an inline-style link with title</span>](<span class=\"token url\">https://www.google.com</span> <span class=\"token string\">\"Google's Homepage\"</span>)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm a reference-style link</span>][<span class=\"token variable\">Arbitrary case-insensitive reference text</span>]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm a relative reference to a repository file</span>](<span class=\"token url\">../blob/master/LICENSE</span>)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">You can use numbers for reference-style link definitions</span>][<span class=\"token variable\">1</span>]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Or leave it empty and use the [link text itself]</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Some text to show that the reference links can follow later.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">arbitrary case-insensitive reference text</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io/docs/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">link text itself</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io/api/</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQ==\">I’m an inline-style link</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQ==\">I’m an inline-style link with title</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">I’m a reference-style link</span></p>\n<p><a href=\"../blob/master/LICENSE\">I’m a relative reference to a repository file</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">You can use numbers for reference-style link definitions</span></p>\n<p>Or leave it empty and use the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2FwaS8=\">link text itself</span></p>\n<p>Some text to show that the reference links can follow later.</p>\n<h2 id=\"images\"><a class=\"markdownIt-Anchor\" href=\"#images\">#</a> Images</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hover to see the title text:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Inline-style:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">alt text</span>](<span class=\"token url\">https://hexo.io/icon/favicon-196x196.png</span> <span class=\"token string\">\"Logo Title Text 1\"</span>)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Reference-style:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">alt text</span>][<span class=\"token variable\">logo</span>]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">logo</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io/icon/favicon-196x196.png <span class=\"token string\">\"Logo Title Text 2\"</span></span></pre></td></tr></table></figure><p>hover to see the title text:</p>\n<p>Inline-style:</p>\n<p><img data-src=\"https://hexo.io/icon/favicon-196x196.png\" alt=\"alt text\" title=\"Logo Title Text 1\"></p>\n<p>Reference-style:<br>\n<img data-src=\"https://hexo.io/icon/favicon-196x196.png\" alt=\"alt text\" title=\"Logo Title Text 2\"></p>\n<h2 id=\"code-and-syntax-highlighting\"><a class=\"markdownIt-Anchor\" href=\"#code-and-syntax-highlighting\">#</a> Code and Syntax Highlighting</h2>\n<p>Inline  <code>code</code>  has  <code>back-ticks around</code>  it.</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"JavaScript syntax highlighting\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"Python syntax highlighting\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span> s</pre></td></tr></table></figure><pre><code>No language indicated, so no syntax highlighting.\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n</code></pre>\n<h2 id=\"tables\"><a class=\"markdownIt-Anchor\" href=\"#tables\">#</a> Tables</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token punctuation\">|</span><span class=\"token table-header important\">                </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">ASCII                          </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">HTML                         </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span><span class=\"token table-line\"><span class=\"token punctuation\">|</span><span class=\"token punctuation\">----------------</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">-------------------------------</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">-----------------------------</span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span><span class=\"token table-data-rows\"><span class=\"token punctuation\">|</span><span class=\"token table-data\">Single backticks</span><span class=\"token punctuation\">|</span><span class=\"token table-data\"><span class=\"token code-snippet code keyword\">`'Isn't this fun?'`</span>            </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">'Isn't this fun?'            </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\">Quotes          </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"><span class=\"token code-snippet code keyword\">`\"Isn't this fun?\"`</span>            </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">\"Isn't this fun?\"            </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\">Dashes          </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"><span class=\"token code-snippet code keyword\">`-- is en-dash, --- is em-dash`</span></span><span class=\"token punctuation\">|</span><span class=\"token table-data\">-- is en-dash, --- is em-dash</span><span class=\"token punctuation\">|</span></span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th></th>\n<th>ASCII</th>\n<th>HTML</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Single backticks</td>\n<td><code>'Isn't this fun?'</code></td>\n<td>‘Isn’t this fun?’</td>\n</tr>\n<tr>\n<td>Quotes</td>\n<td><code>&quot;Isn't this fun?&quot;</code></td>\n<td>“Isn’t this fun?”</td>\n</tr>\n<tr>\n<td>Dashes</td>\n<td><code>-- is en-dash, --- is em-dash</code></td>\n<td>– is en-dash, — is em-dash</td>\n</tr>\n</tbody>\n</table>\n<p>Colons can be used to align columns.</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Tables        </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Are           </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Cool  </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span><span class=\"token table-line\"><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">-------------</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">:-------------:</span><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">-----:</span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span><span class=\"token table-data-rows\"><span class=\"token punctuation\">|</span><span class=\"token table-data\"> col 3 is      </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> right-aligned </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">  </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\"> col 2 is      </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> centered      </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">    </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\"> zebra stripes </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> are neat      </span><span class=\"token punctuation\">|</span></span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\"></td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>The outer pipes (</td>\n<td style=\"text-align:center\">) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token table-header important\">Markdown </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Less </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Pretty</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span><span class=\"token table-line\"><span class=\"token punctuation\">---</span> <span class=\"token punctuation\">|</span> <span class=\"token punctuation\">---</span> <span class=\"token punctuation\">|</span> <span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span><span class=\"token table-data-rows\"><span class=\"token table-data\"><span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">Still</span><span class=\"token punctuation\">*</span></span> </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> <span class=\"token code-snippet code keyword\">`renders`</span> </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">nicely</span><span class=\"token punctuation\">**</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token table-data\">1 </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> 2 </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> 3</span></span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>Markdown</th>\n<th>Less</th>\n<th>Pretty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>Still</em></td>\n<td><code>renders</code></td>\n<td><strong>nicely</strong></td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>You can find more information about <strong>LaTeX</strong> mathematical expressions <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRoLm1ldGEuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzUwMjAvbWF0aGpheC1iYXNpYy10dXRvcmlhbC1hbmQtcXVpY2stcmVmZXJlbmNl\">here</span>.</p>\n</blockquote>\n<h2 id=\"blockquotes\"><a class=\"markdownIt-Anchor\" href=\"#blockquotes\">#</a> Blockquotes</h2>\n<blockquote>\n<p>Blockquotes are very handy in email to emulate reply text.<br>\nThis line is part of the same quote.</p>\n</blockquote>\n<p>Quote break.</p>\n<blockquote>\n<p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>\n</blockquote>\n<h2 id=\"horizontal-rule\"><a class=\"markdownIt-Anchor\" href=\"#horizontal-rule\">#</a> Horizontal Rule</h2>\n<p>Three or more…</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token hr punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Hyphens</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token hr punctuation\">***</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Asterisks</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>___</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Underscores</pre></td></tr></table></figure><hr>\n<p>Hyphens</p>\n<hr>\n<p>Asterisks</p>\n<hr>\n<p>Underscores</p>\n<h2 id=\"line-breaks\"><a class=\"markdownIt-Anchor\" href=\"#line-breaks\">#</a> Line Breaks</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Here's a line for us to start with.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>This line is separated from the one above by two newlines, so it will be a <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">separate paragraph</span><span class=\"token punctuation\">*</span></span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>This line is also a separate paragraph, but...</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>This line is only separated by a single newline, so it's a separate line in the <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">same paragraph</span><span class=\"token punctuation\">*</span></span>.</pre></td></tr></table></figure><p>Here’s a line for us to start with.</p>\n<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>\n<p>This line is also a separate paragraph, but…<br>\nThis line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>\n<hr>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>This is a regular paragraph.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>Foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>This is another regular paragraph.</pre></td></tr></table></figure><p>This is a regular paragraph.</p>\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n<p>This is another regular paragraph.</p>\n<h2 id=\"youtube-videos\"><a class=\"markdownIt-Anchor\" href=\"#youtube-videos\">#</a> Youtube videos</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img.youtube.com/vi/ARted4RniaU/0.jpg<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IMAGE ALT TEXT HERE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>240<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>180<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Pure markdown version:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">![IMAGE ALT TEXT HERE</span>](<span class=\"token url\">https://img.youtube.com/vi/ARted4RniaU/0.jpg</span>)</span>](https://www.youtube.com/watch?v=ARted4RniaU)</pre></td></tr></table></figure><p><a href=\"https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU\n\" target=\"_blank\"><img data-src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a></p>\n<p>Pure markdown version:</p>\n<p><a href=\"https://www.youtube.com/watch?v=ARted4RniaU\"><img data-src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\" alt=\"IMAGE ALT TEXT HERE\"></a></p>\n",
            "tags": [
                "markdown"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2020/09/19/realSSO/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2020/09/19/realSSO/",
            "title": "Node 实现单点登录 sso",
            "date_published": "2020-09-19T10:50:00.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h1>\n<blockquote>\n<p>什么是单点登录？</p>\n</blockquote>\n<p>单点登录即是，当我们在访问某个公司一系列的产品时，登录了某个产品，那么在其他产品也能免登录。<br>\n比如，我在 a.com 登录之后，由于 b.com 和它同属一个产品系列，用户系统是打通的，那么在 b.com 就可以免登录进入。<br>\n今天，我们就着这个登录来说一下吧。</p>\n<h2 id=\"从状态开始说\"><a class=\"markdownIt-Anchor\" href=\"#从状态开始说\">#</a> 从状态开始说</h2>\n<p>我们都知道，http 是无状态的，换句话说就是，请求和响应是基于 TCP 一次性的，它其实本身是不知道发生了什么的。<br>\n但是大多数场景我们都是有状态的，例如一个用户登录了淘宝，买了一件衣服，跟商家扯皮，看直播发了一条弹幕… 这些都是在登录之后才能有的操作，也就是有了登录状态。</p>\n<blockquote>\n<p>小明参加了一场 X 公司举办大型研讨会，来的人有上千个人，为了记录本次大会参与人数，以及识别谁都是谁，大会让他去 X 公司楼下登记处领一张身份卡，上面有 X 公司的特殊 logo，写了小明的名字，关键是还会发光诶～<br>\n小明大感舒服，仿佛有了当贵宾的感 jio，为了表明自己是贵宾，他拿着这个身份卡去购买了很多周边产品…<br>\n 小明把身份卡放在了口袋，每当他去敏感的地方就有一个人来检查身份，他就要掏出来一次，他觉得很麻烦，于是把身份卡挂在了脖子上，这下保安检查身份只需要远远看一眼身份卡上的特有标识就好了，再也没人烦小明买东西 [泡妞] 了</p>\n</blockquote>\n<p>以上身份卡就是我们俗知的 token，代表了我们的身份，那么如何保证我们的操作是有状态的呢？<br>\n很明显，只需要每次都拿着我们的身份卡去请求内容就好啦，所以延伸出来几个点</p>\n<ul>\n<li>收身份卡</li>\n<li>存身份卡</li>\n<li>发身份卡</li>\n</ul>\n<h2 id=\"状态接收-存储-发送\"><a class=\"markdownIt-Anchor\" href=\"#状态接收-存储-发送\">#</a> 状态接收、存储、发送</h2>\n<p>简单的收发存，大家也都耳熟能详了，这里大致介绍一下。</p>\n<p><b>接收分为两种方式：</b></p>\n<ul>\n<li><code>response</code>  的 data 接收 <code>token</code>  类字段</li>\n<li><code>response</code>  的 header 中 <code>set-cookie</code>  字段直接写入 cookie</li>\n</ul>\n<p>其中第二种方式有需要前后端配合清楚，服务端在设置 cookie 的时候，因为可以选择设置为 http-only，也就是前端通过 js 无法获取和修改，只能服务端读取，那么对前端的状态读取就有问题了。</p>\n<p><b>存储分为两种方式：</b></p>\n<ul>\n<li>将 token 直接存入全局变量或全局状态库，比如：vuex、redux</li>\n<li>保存 token 至 localStorage 或 cookie 中</li>\n</ul>\n<p>存储方式一般由前端与服务端配合方式决定，如果 token 只是会话级别，那么存全局变量还是 cookie 都行，如果是存 localStorage，那么要记得清理。</p>\n<p><b>发送分为两种方式：</b></p>\n<ul>\n<li>将 token 放入头部 <code>Authorization</code>  或 <code>Token</code>  之类的字段中</li>\n<li>将 token 放入 cookie，服务端直接读取 cookie 信息</li>\n</ul>\n<p>发送方式完全由服务端决定接受方式。</p>\n<h2 id=\"单点登录原理\"><a class=\"markdownIt-Anchor\" href=\"#单点登录原理\">#</a> 单点登录原理</h2>\n<p>基于以上概念，我们可以使则某个系统拥有登录状态，但是由于 cookie 受域名（domain）限制，如何让其他域名的系统免登录呢？</p>\n<blockquote>\n<p>小明从研讨会出来身份卡就主动退回去了，紧接着他又去参加了 X 公司举办的驴友会，到这里又让他去 X 公司楼下登记处领一张身份卡，小明看了下跟研讨会的身份卡几乎一模一样，都有 X 公司的特殊 logo，小明的名字，关键是都会发光诶～<br>\n小明想是不是可以通过这个卡进去研讨会呢？于是他马上去试了试，真的可以凭借这个身份卡自由进出两场会～<br>\n这个发现让小明惊喜不已，但是这个身份卡用的是特殊的电池，一旦没电了，就没用了，到时候就只能去 X 公司重新领一张身份卡了…</p>\n</blockquote>\n<p>如上述所说，小明拿着 X 公司登记处给的身份卡可以自由进出两场会，代码中也是一样：<br>\n当系统 A 开始进入，发现需要登录，携带当前页面的 url 跳转到统一登录中心，登录完成后，后端将 token 设置到页面 cookie 中，然后携带 token 和 url 回到系统 A 的 <code>callback页面</code> ， <code>callback页面</code> 将 token 存入 cookie，并跳转回系统 A 最初页面。<br>\n系统 B 进入之后，发现需要登录，同样的携带当前页面的 url 跳转到统一登录中心，登录中心发现当前已经登录，且携带的 url 是经过 sso 注册后的系统，于是携带 token 和 url 跳转回到系统 B 的 <code>callback页面</code> ， <code>callback页面</code> 将 token 存入 cookie，并跳转回系统 B 最初页面。</p>\n<p>因此整体流程图如下：</p>\n<div class=\"mermaid\">\n  sequenceDiagram\nclientA-->>serverA: 请求资源\nserverA-->>clientA: 获取失败，未登录\nclientA-->>clientSSO: 登录，携带页面url-pageA\nclientSSO-->>serverSSO: 输入帐号密码，请求登录\nserverSSO-->>clientSSO: set-cookie，种cookie\nclientSSO-->>clientA: 携带token等信息至callback\nNote left of clientA: 将token等信息设置到cookie，并重定向至pageA\n</div>\n\n<div class=\"mermaid\">\n  sequenceDiagram\nclientB-->>serverB: 请求资源\nserverB-->>clientB: 获取失败，未登录\nclientB-->>clientSSO: 登录，携带页面url-pageB\nclientSSO-->>clientB: 已登录，携带token等信息至callback\nNote left of clientB: 将token等信息设置到cookie，并重定向至pageB\n</div>\n\n<h1 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\">#</a> 实现</h1>\n<p>基于以上原理，我们实践需要用到以下系统：client-A、client-B、client-SSO、server-A、server-B、server-SSO，接下来我们开始构建对应系统。</p>\n<h2 id=\"服务端\"><a class=\"markdownIt-Anchor\" href=\"#服务端\">#</a> 服务端</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yarn init midway</pre></td></tr></table></figure><p>服务端采用 <code>midwayjs</code>  快速搭建：</p>\n<p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taWR3YXlqcy5vcmcvZG9jcy9xdWlja3N0YXJ0\">midwayjs 快速开始</span></p>\n<p><b>server-A 和 server-B 核心在于中间件验证 token，当请求进来时，将请求头部身份信息拿去 server-SSO 系统去验证 token：</b></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> IMiddleware<span class=\"token punctuation\">,</span> makeHttpRequest <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/core\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Middleware <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/decorator\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NextFunction<span class=\"token punctuation\">,</span> Context <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/koa\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@<span class=\"token function\">Middleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JwtMiddleware</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IMiddleware</span><span class=\"token operator\">&lt;</span>Context<span class=\"token punctuation\">,</span> NextFunction<span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">ctx</span><span class=\"token operator\">:</span> Context<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> NextFunction</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">cookies</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> identity<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> sid<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        cookies<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token comment\">// 获取 cookie 信息，请求 server-SSO，验证 token</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">const</span> verify <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">makeHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://127.0.0.1:7001/api/verify\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> cookies<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token literal-property property\">sid</span><span class=\"token operator\">:</span> cookies<span class=\"token punctuation\">.</span>sid<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token literal-property property\">identity</span><span class=\"token operator\">:</span> cookies<span class=\"token punctuation\">.</span>identity</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>verify<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> verify<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> verify<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>msssage <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">static</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"report\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><b>server-SSO 我们这里只做两件事：</b></p>\n<ul>\n<li>登录，利用 jwt 生成 token，并存入 redis</li>\n<li>验证 token 是否有效</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  Inject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  Controller<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  Get<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Post</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/decorator\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Context <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/koa\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> UserService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../service/user.service\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> RedisService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/redis\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> JwtService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@midwayjs/jwt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> v4 <span class=\"token keyword\">as</span> uuid <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>@<span class=\"token function\">Controller</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">APIController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  @<span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> ctx<span class=\"token operator\">:</span> Context<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  @<span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> userService<span class=\"token operator\">:</span> UserService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  @<span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> redisService<span class=\"token operator\">:</span> RedisService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  @<span class=\"token function\">Inject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> jwtService<span class=\"token operator\">:</span> JwtService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">// 验证 token</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  @<span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/verify\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">async</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        identity<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        sid</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> sid<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> identity<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token keyword\">const</span> tokenExists <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>redisService<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tokenExists <span class=\"token operator\">&amp;&amp;</span> identity <span class=\"token operator\">==</span> tokenExists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jwtService<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>identity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userService<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">msssage</span><span class=\"token operator\">:</span> <span class=\"token string\">\"token is invaild.\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">msssage</span><span class=\"token operator\">:</span> <span class=\"token string\">\"data is invaild.\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token literal-property property\">expires</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token literal-property property\">signed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token literal-property property\">sameSite</span><span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token comment\">// 登录</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  @<span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">async</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span> message<span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      password</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> username<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> password<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userService<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\">// 用户名密码验证</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">&amp;&amp;</span> user<span class=\"token punctuation\">.</span>password <span class=\"token operator\">===</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>jwtService<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> username<span class=\"token punctuation\">,</span> password <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      <span class=\"token comment\">// 生成随机 id</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      <span class=\"token keyword\">const</span> sid <span class=\"token operator\">=</span> <span class=\"token function\">uuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>sid <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token comment\">// 将 redis 中原 token 删除</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>redisService<span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      <span class=\"token comment\">// 将新的 token 存入 redis</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>redisService<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> <span class=\"token string\">\"EX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        sid<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        token</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>      <span class=\"token comment\">// 将 token 信息设置到 web 的 cookie 中</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sid'</span><span class=\"token punctuation\">,</span> sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identity'</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userService<span class=\"token punctuation\">.</span><span class=\"token function\">setUserToken</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"OK\"</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"username or password is invalid.\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"前端\"><a class=\"markdownIt-Anchor\" href=\"#前端\">#</a> 前端</h2>\n<p>前端采用 <code>vite + vue3</code>  快速搭建：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> create vite</pre></td></tr></table></figure><p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52aXRlanMuZGV2L2d1aWRlLyNzY2FmZm9sZGluZy15b3VyLWZpcnN0LXZpdGUtcHJvamVjdA==\">vite 官方文档</span></p>\n<p><b>client-A 和 client-B 系统页面路由守卫鉴权，如果 cookie 中令牌不存在，跳转到 client-SSO：</b></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> Cookies <span class=\"token keyword\">from</span> <span class=\"token string\">'js-cookie'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> back_page <span class=\"token operator\">=</span> <span class=\"token string\">'/callback'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>router<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> identity <span class=\"token operator\">=</span> Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identity'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> sid <span class=\"token operator\">=</span> Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>identity <span class=\"token operator\">&amp;&amp;</span> sid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> back_page<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path <span class=\"token operator\">===</span> back_page<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">const</span> redirect_url <span class=\"token operator\">=</span> to<span class=\"token punctuation\">.</span>fullPath</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://127.0.0.1:6001/?redirect_url=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>redirect_url<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;name=a</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><b>client-SSO 登录页面做两件事：</b></p>\n<ul>\n<li>当没有 token 去登录</li>\n<li>当有 token 直接携带 token 重定向回去</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// This starter template is using Vue 3 &lt;script setup> SFCs</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Check out https://vuejs.org/api/sfc-script-setup.html#script-setup</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref<span class=\"token punctuation\">,</span> onMounted<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useRoute <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> Cookies <span class=\"token keyword\">from</span> <span class=\"token string\">'js-cookie'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">const</span> password <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> logined <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token function\">useRoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> ssoRegisters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token string-property property\">\"a\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://test-a.com:6002/callback\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token string-property property\">\"b\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://test-b.com:6003/callback\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">signIn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://127.0.0.1:7001/api/login\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json; charset=utf-8\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> password<span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">r</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      logined<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">replaceUrl</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> identity<span class=\"token punctuation\">,</span> sid<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token keyword\">const</span> ssoObj <span class=\"token operator\">=</span> ssoRegisters<span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ssoObj <span class=\"token operator\">&amp;&amp;</span> identity <span class=\"token operator\">&amp;&amp;</span> sid <span class=\"token operator\">&amp;&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>ssoObj<span class=\"token punctuation\">.</span>path<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">?redirect_url=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">.</span>redirect_url<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;identity=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>identity<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;name=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;sid=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCookie</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">const</span> identity <span class=\"token operator\">=</span> Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identity'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">const</span> sid <span class=\"token operator\">=</span> Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sid'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    identity<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    sid<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    name</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> identity<span class=\"token punctuation\">,</span> sid<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>identity <span class=\"token operator\">&amp;&amp;</span> sid <span class=\"token operator\">&amp;&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    user<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    logined<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    logined<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> logined<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>newLogined<span class=\"token punctuation\">,</span> newRoute<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newLogined <span class=\"token operator\">&amp;&amp;</span> newRoute<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token function\">replaceUrl</span><span class=\"token punctuation\">(</span>newRoute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  <span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token keyword\">const</span> isLogined <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> logined<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"!isLogined\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token constant\">SSO</span>登录<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>username<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>password<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>      <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"signIn\"</span><span class=\"token operator\">></span>登录<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">else</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>已登录<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hi， <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">2</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></pre></td></tr></table></figure><p>到此，sso 登录就完成了，其实过程很简单，只要掌握了其中关键，一切就通了。</p>\n<p>当然，这里面还有一些可优化的地方，比如：</p>\n<ul>\n<li>token 设置为 same-site，避免 csrf 攻击</li>\n<li>token 有效期，token 刷新优化</li>\n<li>系统域名绑定更严谨一些，通过配置中心读取</li>\n<li>sso 系统采用服务端渲染，服务端读取 sso 认证配置</li>\n<li>跳转 client-sso 前通过请求 server-sso 一个接口，一般来说可以是一个 img 文件，然后通过服务端 set-cookie 设置 sso 令牌</li>\n</ul>\n<p>等等… 这里只是做一个比较简单的 sso 登录，大家了解原理之后可以改善一下。</p>\n<p>源码我放在了<a href=\"https://github.com/Catlina-2B/real-sso\">https://github.com/Catlina-2B/real-sso</a>上，</p>\n",
            "tags": [
                "node",
                "http"
            ]
        },
        {
            "id": "https://github.com/Catlina-2B/catlina-2B.github.io/2020/02/21/sso/",
            "url": "https://github.com/Catlina-2B/catlina-2B.github.io/2020/02/21/sso/",
            "title": "一步步实现一个单点登录（含后端）",
            "date_published": "2020-02-21T08:51:00.000Z",
            "content_html": "<h2 id=\"先来看看实现效果吧\"><a class=\"markdownIt-Anchor\" href=\"#先来看看实现效果吧\">#</a> 先来看看实现效果吧</h2>\n<img data-src=\"/2020/02/21/sso/sso.gif\" class=\"\">\n<h2 id=\"前端原理\"><a class=\"markdownIt-Anchor\" href=\"#前端原理\">#</a> 前端原理</h2>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cDovL2EuY29t\">a.com</span> 登录之后我们要实现 <span class=\"exturl\" data-url=\"aHR0cDovL2IuY29t\">b.com</span> 打开后自动登录，我们知道两者之间必不可少的环节就是相互通信</p>\n<p>但是由于浏览器因为安全问题设置有 cookie 同源策略影响  因此有了两种解决方案：</p>\n<h5 id=\"第一种子域通过访问主域获取信息\"><a class=\"markdownIt-Anchor\" href=\"#第一种子域通过访问主域获取信息\">#</a> 第一种：子域通过访问主域获取信息</h5>\n<p>子域可完美获取到主域下的 cookie 信息，此方案没什么可说的，且这种方案限制性太强，需要两个子系统都是二级域</p>\n<h5 id=\"第二种两个系统统一把登录信息存储到另一个服务中也是以下实现的方案\"><a class=\"markdownIt-Anchor\" href=\"#第二种两个系统统一把登录信息存储到另一个服务中也是以下实现的方案\">#</a> 第二种：两个系统统一把登录信息存储到另一个服务中（也是以下实现的方案）</h5>\n<p>每个系统登录后的信息都传入此作为通信的系统中，每个系统打开后都先尝试去通信服务中获取用户令牌</p>\n<p>如若获取到，直接使用令牌登录获取用户信息，如若没有获取到，正常让用户登录，利用手段：跨域存储</p>\n<h3 id=\"知识理论层有基础的可直接进入下方实践层\"><a class=\"markdownIt-Anchor\" href=\"#知识理论层有基础的可直接进入下方实践层\">#</a> 知识理论层 (有基础的可直接进入下方实践层)</h3>\n<p><strong>window 提供一个 api 接口叫 postMessage，方法参数如下</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>otherWindow<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> targetOrigin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>transfer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><em><strong>otherWindow</strong></em><br>\n 其他窗口的一个引用，比如 iframe 的 contentWindow 属性、执行 window.open 返回的窗口对象、或者是命名过或数值索引的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dpbmRvdy9mcmFtZXM=\"> window.frames</span>。</p>\n<p><em><strong>message</strong></em><br>\n 将要发送到其他 window 的数据。它将会被<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9Xb3JrZXJzX0FQSS9TdHJ1Y3R1cmVkX2Nsb25lX2FsZ29yaXRobQ==\">结构化克隆算法</span>序列化。这意味着你可以不受什么限制的将数据对象安全的传送给目标窗口而无需自己序列化。</p>\n<p><em><strong>targetOrigin</strong></em><br>\n 通过窗口的 origin 属性来指定哪些窗口能接收到消息事件，其值可以是字符串 &quot;<em>&quot;（表示无限制）或者一个 URI。在发送消息的时候，如果目标窗口的协议、主机地址或端口这三者的任意一项不匹配 targetOrigin 提供的值，那么消息就不会被发送；只有三者完全匹配，消息才会被发送。这个机制用来控制消息可以发送到哪些窗口；例如，当用 postMessage 传送密码时，这个参数就显得尤为重要，必须保证它的值与这条包含密码的信息的预期接受者的 origin 属性完全一致，来防止密码被恶意的第三方截获。如果你明确的知道消息应该发送到哪个窗口，那么请始终提供一个有确切值的 targetOrigin，而不是</em>。不提供确切的目标将导致数据泄露到任何对数据感兴趣的恶意站点。</p>\n<p><em><strong>transfer (可选)</strong></em><br>\n 是一串和 message 同时传递的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RyYW5zZmVyYWJsZQ==\">Transferable</span> 对象。这些对象的所有权将被转移给消息的接收方，而发送一方将不再保有所有权。</p>\n<p>有了如上这等好东西，那么我们可以在通信服务中设置一个可访问的页面，每个系统登录之后我们就将信息储存到这个服务中</p>\n<p>那么我们每个系统在登录前只需要通过 ifarme 去这个通信服务中获取一下信息就好了</p>\n<p>为了方便调试，笔者这里在本地开启了三个端口（server1、server2、loginServer），他们的关系大概如下图所示</p>\n<img data-src=\"/2020/02/21/sso/relation.png\" class=\"\">\n<h3 id=\"前端代码实践\"><a class=\"markdownIt-Anchor\" href=\"#前端代码实践\">#</a> 前端代码实践</h3>\n<p>有了如上述这般的扯淡，那么接下来直接上代码</p>\n<p><strong>需要登录的 server</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 登录方法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> password <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.psw'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    jQuery<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:8083/login'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            password</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">const</span> resData <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fadeOut</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fadeIn</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                &lt;div></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    &lt;p>登录成功&lt;/p></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    &lt;p>message: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>resData<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                &lt;/div></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">// 登陆成功后将用户令牌发送到通信服务中存好</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function\">postInfo</span><span class=\"token punctuation\">(</span>resData<span class=\"token punctuation\">,</span> <span class=\"token string\">'set'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'userInfo'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// 发送数据到通信服务</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">postInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">const</span> ifameWin <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#middle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>contentWindow</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">let</span> Message <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> func <span class=\"token operator\">===</span> <span class=\"token string\">'set'</span><span class=\"token operator\">?</span> <span class=\"token string\">'setItem'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'getItem'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'userInfo'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> data <span class=\"token operator\">||</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    ifameWin<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">// 先看看自己有没有登录信息</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            &lt;div></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                &lt;p>已登录&lt;/p></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                &lt;p>用户名: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'userInfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                &lt;p>用户名: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'userInfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>password<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            &lt;/div></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">// 自己没有就去通信服务粑粑那儿看看有没有</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token function\">postInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">// 监听通信服务粑粑那儿发过来的信息</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\">// 如果有需要的信息（此处判断过于简单，笔者懒你们可不能懒啊）</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                &lt;div></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    &lt;p>已登录&lt;/p></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                    &lt;p>用户名: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>data<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    &lt;p>用户名: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>data<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>password<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&lt;/p></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                &lt;/div></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>负责通信的 server</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> objMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">setItem</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function-variable function\">getItem</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * 监听系统儿子发过来的信息，根据儿子需求做对应的事</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span> method<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> objMap<span class=\"token punctuation\">[</span>method<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        result</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    window<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"好了到这里前端工作就做完了接下来进入后端工作\"><a class=\"markdownIt-Anchor\" href=\"#好了到这里前端工作就做完了接下来进入后端工作\">#</a> 好了，到这里前端工作就做完了，接下来进入后端工作</h4>\n<p>神说：我们的系统登录需要后端配合于是后端便有了登录接口</p>\n<p>后端为了方便各位自己尝试修改，因此采用的是 node.js 的 koa2 来做，通信服务页面为了方便也放在了这里</p>\n<p>大概逻辑就是：客户端发起登录请求，根据用户信息进行验证，验证成功则生成 token 返回给客户端</p>\n<p>笔者这里没有连接数据库，甚至连简单的文件数据库都没做，只做了个最简单的信息存储，因为我懒…</p>\n<p>如此如此～～  这般这般～～</p>\n<img data-src=\"/2020/02/21/sso/server.png\" class=\"\">\n<p>到这里就结束了，具体源码我已经上传到了 github 了， 有兴趣的可以 down 下来自己试试， <a href=\"https://github.com/Catlina1996/sso\">https://github.com/Catlina1996/sso</a></p>\n",
            "tags": []
        }
    ]
}